openapi: 3.0.1
info:
  title: Collection System
  description: Collection Management System serves as revenue collection platform
    for all the billing systems through cash, cheque, dd, swipe machine.
  contact:
    name: eGovernments Foundation
    email: contact@egovernments.org
  version: 1.0.1
servers:
- url: /payments
paths:
  /_search:
    post:
      tags:
      - Payment
      summary: Searches the Payment based on search criteria
      description: API to search payments based on search parameters like consumerCode,
        mobileNumber, transactionNumber etc.
      parameters:
      - name: tenantId
        in: query
        description: Unique id for a tenant.
        required: true
        schema:
          type: string
          format: varchar
      - name: pageSize
        in: query
        description: Number of records returned.
        schema:
          multipleOf: 10.0
          maximum: 100
          exclusiveMaximum: false
          minimum: 0
          exclusiveMinimum: true
          type: integer
          default: 20
      - name: pageNumber
        in: query
        description: Page number
        schema:
          type: integer
          default: 1
      - name: sort
        in: query
        description: Receipt results will be sorted by receiptnumber ascending by
          default.
        style: pipeDelimited
        schema:
          maxItems: 3
          minItems: 1
          uniqueItems: true
          type: array
          items:
            pattern: '[-+](receiptNumber|receiptDate)'
            type: string
          default: '["+receiptNumber"]'
      - name: ids
        in: query
        description: Payment Ids.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: consumerCodes
        in: query
        description: Consumer Code .
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: receiptNumbers
        in: query
        description: List of receipt numbers.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: fromDate
        in: query
        description: Transaction date, here search will happen as Transaction date
          is greater or equal to given fromDate.
        schema:
          type: integer
          format: int64
      - name: toDate
        in: query
        description: Transaction date, here search will happen as Transaction date
          is lesser or equal to given toDate.
        schema:
          type: integer
          format: int64
      - name: status
        in: query
        description: Search based on the status of the Payment.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: instrumentStatus
        in: query
        description: Search based on the status of the instrument.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: paymentModes
        in: query
        description: Search based on the Payment type such as cash, cheque, dd etc.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: payerIds
        in: query
        description: The ids of the payer
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      - name: transactionNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one
          transaction.
        schema:
          maxLength: 64
          minLength: 0
          type: string
      - name: mobileNumber
        in: query
        description: Unique tansaction number for multiple receipts created in one
          transaction.
        schema:
          maxLength: 64
          minLength: 0
          type: string
      - name: billIds
        in: query
        description: List of bill ids to search receipts.Business details code is
          mandatory for searching with this criteria.
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string
      requestBody:
        description: Parameter to carry Request metadata in the request body
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/RequestInfo'
        required: false
      responses:
        200:
          description: Successful response
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Invalid input.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorRes'
      x-codegen-request-body-name: requestInfo
  /_create:
    post:
      tags:
      - Payment
      summary: Records the payment in the system
      description: This API generates a transaction number and persists the payment
        details. The payment information is then pushed to queue for further processing.
      requestBody:
        description: Creates payment for list of bill
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        201:
          description: Payment created sucessfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Invalid input.
          content: {}
      x-codegen-request-body-name: PaymentRequest
  /_validate:
    post:
      tags:
      - Payment
      summary: Validates the PaymentRequest
      description: |
        The API runs the following set of validations on the payment request.
        1. Bill is present and is in valid state
        2. Amount paid is positive integer
        3. Zero amount payment is allowed only if bill amount is zero
        4. Payment mode is allowed
        5. Partial Payment is allowed based on the businessService
        6. Advance payment is allowed based on the businessService
      requestBody:
        description: The request to be validated
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PaymentRequest'
        required: true
      responses:
        201:
          description: Payment info validated sucessfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Invalid input.
          content: {}
      x-codegen-request-body-name: PaymentRequest
  /_workflow:
    post:
      tags:
      - Payment
      summary: Performs workflow actions on the payment
      description: "The API can perform the following operations:  \n1. Cancellation\
        \ of receipts in open state.\n2. Remittance of instruments such as Cash, Cheque,\
        \ DD .\n3. Dishonoring of instruments such as Cheque, DD.\n"
      requestBody:
        description: The workflow request
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PaymentWorkflowRequest'
        required: true
      responses:
        201:
          description: Payment status updated sucessfully.
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PaymentResponse'
        400:
          description: Invalid input.
          content: {}
      x-codegen-request-body-name: PaymentWorkflowRequest
components:
  schemas:
    PaymentRequest:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        Payment:
          $ref: '#/components/schemas/Payment'
      description: Payment Request with Request Info.
    PaymentResponse:
      type: object
      properties:
        responseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Payment:
          $ref: '#/components/schemas/Payment'
      description: Receipt Request with Request Info.
    PaymentWorkflowRequest:
      type: object
      properties:
        requestInfo:
          $ref: '#/components/schemas/RequestInfo'
        Payment:
          $ref: '#/components/schemas/PaymentWorkflow'
      description: Payment Workflow Request with Request Info.
    Bill:
      type: object
      properties:
        paidBy:
          type: string
          description: Name of the Person who is making payment.
        mobileNumber:
          type: string
          description: The mobileNumber of person who is paying
          format: varchar
        payerName:
          type: string
          description: The owner of the bill
          format: varchar
        payerAddress:
          type: string
          description: The address of the owner of the bill
          format: varchar
        payerEmail:
          type: string
          description: The email id of the owner of the bill
          format: varchar
        payerId:
          type: string
          description: The system user id of the owner of the bill
          format: varchar
        status:
          type: string
          description: status of the bill.
          enum:
          - ACTIVE
          - CANCELLED
          - PAID
          - EXPIRED
        reasonForCancellation:
          type: string
          description: The reason for cancellation of bill
          format: varchar
        isCancelled:
          type: boolean
          description: Boolean indicating if the bill is cancelled
          format: varchar
        additionalDetails:
          type: object
          properties: {}
          description: Additional fields can be captured here
        collectionModesNotAllowed:
          type: array
          description: The list of collection modes that are not allowed
          items:
            type: string
        partPaymentAllowed:
          type: boolean
          description: Boolean flag indicating if partial payment is allowed to be
            collected
        isAdvanceAllowed:
          type: boolean
          description: Flag indicating if advance can be collected
        minimumAmountToBePaid:
          type: number
          description: The minumun amount that can be paid against the bill
          format: double
        businessService:
          type: string
          description: The businessService of the entity for which the bill is generated
          format: varchar
        totalAmount:
          type: number
          description: The total amount to be paid for the bill
          format: double
        consumerCode:
          type: string
          description: The consumer code for which bill is generated
          format: varchar
        billNumber:
          type: string
          description: The bill number generated by system
          format: varchar
        billDate:
          type: number
          description: The date on which bill is generated
          format: int64
        billDetails:
          type: array
          items:
            $ref: '#/components/schemas/BillDetail'
    BillDetail:
      type: object
      properties:
        id:
          type: string
          description: uuid of the billDetail.
        tenantId:
          type: string
          description: tenantId of the billDetail.
        demandId:
          type: string
          description: The id of the corresponding demand .
        billId:
          type: string
          description: The id of the parent bill.
        amount:
          type: number
          description: Amount to be paid for the bill detail.
          format: double
        amountPaid:
          type: number
          description: Amount paid by the citizen.
          format: double
        fromPeriod:
          type: number
          description: start date of the taxperiod
          format: int64
        toPeriod:
          type: number
          description: end date of the taxperiod
          format: int64
        receiptDate:
          type: string
          description: Receipt Date.
          format: date
        receiptType:
          type: object
          description: Type of Receipt.
        channel:
          type: string
          description: To be used by third party applications, to send the channel
            name.
        voucherHeader:
          type: object
          description: Voucher header  need to refer from Finanicals.
        boundary:
          type: object
          description: Boundary need to refer from Core services.
        manualReceiptNumber:
          type: string
          description: Manual Receipt Number for legacy reciepts.
        manualReceiptDate:
          type: number
          description: Manual Receipt date for legacy reciepts.
        collectionType:
          type: string
          description: collectionType of the payment.
        billDescription:
          type: string
          description: Description of the bill.
        expiryDate:
          type: number
          description: Expiry date in epoch
          format: int64
        displayMessage:
          type: string
        cancellationRemarks:
          type: string
          description: Remarks related to cancellation of payment
        billAccountDetails:
          type: array
          items:
            $ref: '#/components/schemas/BillAccountDetail'
    BillAccountDetail:
      type: object
      properties:
        id:
          type: string
          description: uuid of the billAccountDetail.
        tenantId:
          type: string
          description: tenantId of the billAccountDetail.
        billDetailId:
          type: string
          description: uuid of the parent billDetail.
        demandDetailId:
          type: string
          description: uuid of the demand for which the parent billDetail is created.
        order:
          type: integer
          description: Priority of the account detail.
        amount:
          type: number
          description: Amount to be paid for the bill account detail
          format: double
        adjustedAmount:
          type: number
          description: The amount paid against the bill account detail
          format: double
        taxHeadCode:
          type: string
          description: The taxHeadCode of the bill account detail
        additionalDetails:
          type: object
          properties: {}
          description: Additional fields can be captured in this object as map
        purpose:
          type: string
          description: purpose of the bill account detail.
          enum:
          - ARREAR
          - CURRENT
          - ADVANCE
          - EXEMPTION
          - ARREAR_LATEPAYMENT_CHARGES
          - CURRENT_LATEPAYMENT_CHARGES
          - CHEQUE_BOUNCE_PENALTY
          - REBATE
          - OTHERS
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
    Payment:
      required:
      - mobileNumber
      - paidBy
      - paymentDetails
      - paymentMode
      - tenantId
      - totalAmountPaid
      type: object
      properties:
        tenantId:
          maxLength: 64
          type: string
          description: Unique id of tenant.
          format: varchar
        id:
          maxLength: 64
          type: string
          description: Unique id of tenant.
          format: varchar
        totalDue:
          type: number
          description: Total amount due.
        totalAmountPaid:
          type: number
          description: Unique id of tenant.
          format: double
        transactionNumber:
          maxLength: 128
          type: string
          description: Transaction number of the payment
          format: varchar
        transactionDate:
          type: number
          description: The date of payment in epoch
          format: int64
        paymentMode:
          type: string
          description: Mode of payment used.
          format: varchar
          enum:
          - CASH
          - CHEQUE
          - DD
          - ONLINE
          - CARD
        instrumentDate:
          type: number
          description: The instrument date
          format: int64
        instrumentNumber:
          maxLength: 128
          type: string
          description: The number of the instrument like dd number,cheque number etc.
          format: varchar
        instrumentStatus:
          type: string
          description: The status of the instrument
          format: varchar
          enum:
          - APPROVED
          - APPROVALPENDING
          - TOBESUBMITTED
          - REMITTED
          - REJECTED
          - CANCELLED
          - DISHONOURED
        ifscCode:
          maxLength: 64
          type: string
          description: IFSC code of the bank to which payment is made
          format: varchar
        additionalDetails:
          type: object
          properties: {}
          description: Any additional fields can be captured here as a map
        paymentDetails:
          type: array
          description: Payment details of each bill
          items:
            $ref: '#/components/schemas/PaymentDetail'
        paidBy:
          maxLength: 128
          type: string
          description: The person who is paying the bill
          format: varchar
        mobileNumber:
          maxLength: 64
          type: string
          description: The mobileNumber of person who is paying
          format: varchar
        payerName:
          maxLength: 128
          type: string
          description: The owner of the bill
          format: varchar
        payerAddress:
          maxLength: 1024
          type: string
          description: The address of the owner of the bill
          format: varchar
        payerEmail:
          maxLength: 64
          type: string
          description: The email id of the owner of the bill
          format: varchar
        payerId:
          maxLength: 64
          type: string
          description: The system user id of the owner of the bill
          format: varchar
        paymentStatus:
          type: string
          description: Unique id of tenant.
          enum:
          - NEW
          - DEPOSITED
          - CANCELLED
          - DISHONOURED
          - RECONCILED
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
    PaymentDetail:
      required:
      - billId
      - totalAmountPaid
      type: object
      properties:
        id:
          maxLength: 64
          type: string
          description: id of the payment detail
        tenantId:
          maxLength: 64
          type: string
          description: tenantId of the payment detail
        totalDue:
          type: number
          description: The total amount to be paid for the bill corresponding to the
            payment detail
          format: double
        totalAmountPaid:
          type: number
          description: The amount that is being paid
          format: double
        manualReceiptNumber:
          maxLength: 64
          type: string
          description: Receipt number entered manually for legacy data.
        receiptNumber:
          maxLength: 64
          type: string
          description: The receipt number generated for the payment against the bill
        receiptType:
          type: string
          description: The receipt type generated for the payment against the bill
        receiptDate:
          type: integer
          description: The epoch receipt date generated for the payment against the
            bill
        businessService:
          type: string
          description: The code of the businessService to which the bill belongs
        billId:
          maxLength: 64
          type: string
          description: The id of the bill for which the payment is made
        bill:
          $ref: '#/components/schemas/Bill'
        additionalDetails:
          type: integer
          description: Any additional fields can be captured here as a map
        auditDetails:
          $ref: '#/components/schemas/AuditDetails'
      description: The payment details of each bill
    PaymentWorkflow:
      required:
      - action
      - paymentId
      - tenantId
      type: object
      properties:
        paymentId:
          type: string
          description: id of the payment on which to take action .
        action:
          type: string
          description: the action to be taken on the payment
          enum:
          - CANCEL
          - DISHONOUR
          - REMIT
        tenantId:
          type: string
          description: tenantId of the payment
        reason:
          type: string
          description: reason for taking the action.
        additionalDetails:
          type: integer
          description: Any additional fields can be captured here as a map
      description: Workflow object for payment
    ErrorRes:
      required:
      - ResponseInfo
      type: object
      properties:
        ResponseInfo:
          $ref: '#/components/schemas/ResponseInfo'
        Errors:
          type: array
          description: Error response array corresponding to Request Object array.
            In case of single object submission or _search related paths this may
            be an array of one error element
          items:
            $ref: '#/components/schemas/Error'
      description: All APIs will return ErrorRes in case of failure which will carry
        ResponseInfo as metadata and Error object as actual representation of error.
        In case of bulk apis, some apis may chose to return the array of Error objects
        to indicate individual failure.
    ResponseInfo:
      required:
      - apiId
      - status
      - ts
      - ver
      type: object
      properties:
        apiId:
          maxLength: 128
          type: string
          description: unique API ID
        ver:
          maxLength: 32
          type: string
          description: API version
        ts:
          type: integer
          description: response time in epoch
          format: int64
        resMsgId:
          maxLength: 256
          type: string
          description: unique response message id (UUID) - will usually be the correlation
            id from the server
        msgId:
          maxLength: 256
          type: string
          description: message id of the request
        status:
          type: string
          description: status of request processing - to be enhanced in futuer to
            include INPROGRESS
          enum:
          - SUCCESSFUL
          - FAILED
      description: ResponseInfo should be used to carry metadata information about
        the response from the server. apiId, ver and msgId in ResponseInfo should
        always correspond to the same values in respective request's RequestInfo.
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          description: Error Code will be module specific error label/code to identiffy
            the error. All modules should also publish the Error codes with their
            specific localized values in localization service to ensure clients can
            print locale specific error messages. Example for error code would be
            User.NotFound to indicate User Not Found by User/Authentication service.
            All services must declare their possible Error Codes with brief description
            in the error response section of their API path.
        message:
          type: string
          description: English locale message of the error code. Clients should make
            a separate call to get the other locale description if configured with
            the service. Clients may choose to cache these locale specific messages
            to enhance performance with a reasonable TTL (May be defined by the localization
            service based on tenant + module combination).
        description:
          type: string
          description: Optional long description of the error to help clients take
            remedial action. This will not be available as part of localization service.
        params:
          type: array
          description: Some error messages may carry replaceable fields (say $1, $2)
            to provide more context to the message. E.g. Format related errors may
            want to indicate the actual field for which the format is invalid. Client's
            should use the values in the param array to replace those fields.
          items:
            type: string
      description: Error object will be returned as a part of reponse body in conjunction
        with ResponseInfo as part of ErrorResponse whenever the request processing
        status in the ResponseInfo is FAILED. HTTP return in this scenario will usually
        be HTTP 400.
    RequestInfo:
      required:
      - action
      - apiId
      - msgId
      - ts
      - ver
      type: object
      properties:
        apiId:
          maxLength: 128
          type: string
          description: unique API ID
        ver:
          maxLength: 32
          type: string
          description: API version - for HTTP based request this will be same as used
            in path
        ts:
          type: integer
          description: time in epoch
          format: int64
        action:
          maxLength: 32
          type: string
          description: API action to be performed like _create, _update, _search (denoting
            POST, PUT, GET) or _oauth etc
        did:
          maxLength: 1024
          type: string
          description: Device ID from which the API is called
        key:
          maxLength: 256
          type: string
          description: API key (API key provided to the caller in case of server to
            server communication)
        msgId:
          maxLength: 256
          type: string
          description: Unique request message id from the caller
        requesterId:
          maxLength: 256
          type: string
          description: UserId of the user calling
        authToken:
          type: string
          description: //session/jwt/saml token/oauth token - the usual value that
            would go into HTTP bearer token
        userInfo:
          $ref: '#/components/schemas/UserInfo'
        correlationId:
          type: string
          readOnly: true
      description: RequestInfo should be used to carry meta information about the
        requests to the server as described in the fields below. All eGov APIs will
        use requestinfo as a part of the request body to carry this meta information.
        Some of this information will be returned back from the server as part of
        the ResponseInfo in the response body to ensure correlation.
    UserInfo:
      required:
      - primaryrole
      - tenantId
      - userName
      type: object
      properties:
        tenantId:
          type: string
          description: Unique Identifier of the tenant to which user primarily belongs
        id:
          type: integer
          description: User id of the authenticated user. Will be deprecated in future
          format: int32
        userName:
          type: string
          description: Unique user name of the authenticated user
        mobile:
          type: string
          description: mobile number of the autheticated user
        email:
          type: string
          description: email address of the authenticated user
        primaryrole:
          type: array
          description: List of all the roles for the primary tenant
          items:
            $ref: '#/components/schemas/Role'
        additionalroles:
          type: array
          description: array of additional tenantids authorized for the authenticated
            user
          items:
            $ref: '#/components/schemas/TenantRole'
      description: This is acting ID token of the authenticated user on the server.
        Any value provided by the clients will be ignored and actual user based on
        authtoken will be used on the server.
    Role:
      required:
      - name
      type: object
      properties:
        name:
          maxLength: 64
          type: string
          description: Unique name of the role
        description:
          type: string
          description: brief description of the role
      description: |
        minimal representation of the Roles in the system to be carried along in UserInfo with RequestInfo meta data. Actual authorization service to extend this to have more role related attributes
    TenantRole:
      required:
      - roles
      - tenantId
      type: object
      properties:
        tenantId:
          type: string
          description: tenantid for the tenant
        roles:
          type: array
          description: Roles assigned for a particular tenant - array of role codes/names
          items:
            $ref: '#/components/schemas/Role'
      description: User role carries the tenant related role information for the user.
        A user can have multiple roles per tenant based on the need of the tenant.
        A user may also have multiple roles for multiple tenants.
    AuditDetails:
      type: object
      properties:
        createdBy:
          type: string
          description: username (preferred) or userid of the user that created the
            object
        lastModifiedBy:
          type: string
          description: username (preferred) or userid of the user that last modified
            the object
        createdTime:
          type: integer
          description: epoch of the time object is created
          format: int64
        lastModifiedTime:
          type: integer
          description: epoch of the time object is last modified
          format: int64
      description: Collection of audit related fields used by most models
  parameters:
    pageSize:
      name: pageSize
      in: query
      description: Number of records returned.
      schema:
        multipleOf: 10.0
        maximum: 100
        exclusiveMaximum: false
        minimum: 0
        exclusiveMinimum: true
        type: integer
        default: 20
    pageNumber:
      name: pageNumber
      in: query
      description: Page number
      schema:
        type: integer
        default: 1
    sortReceipt:
      name: sort
      in: query
      description: Receipt results will be sorted by receiptnumber ascending by default.
      style: pipeDelimited
      schema:
        maxItems: 3
        minItems: 1
        uniqueItems: true
        type: array
        items:
          pattern: '[-+](receiptNumber|receiptDate)'
          type: string
        default: '["+receiptNumber"]'
x-common-path: https://raw.githubusercontent.com/egovernments/egov-services/master/docs/common/contracts/v1-0-0.yml
